{"version":3,"sources":["firebase/firebaseConfig.js","firebase/base.js","firebase/index.js","providers/UserProvider.jsx","providers/DateProvider.jsx","modules/Authentication/PasswordReset/PasswordReset.jsx","modules/Authentication/SignIn/SignIn.jsx","modules/Authentication/SignUp/SignUp.jsx","modules/Authentication/Authentication.jsx","modules/Todos/Calendar/Months/Months.jsx","modules/Todos/Calendar/TheDate/TheDate.jsx","modules/Todos/Calendar/Calendar.jsx","modules/Todos/ListTodo/ListTodo.jsx","modules/Todos/ProfilePage/ProfilePage.jsx","modules/Todos/EditTodo/EditTodo.jsx","modules/Todos/AddTodo/AddTodo.jsx","modules/Todos/AddTodo/AddTodoPage.jsx","modules/Todos/EditTodo/EditTodoPage.jsx","modules/Todos/Todo.jsx","routes/Routes.jsx","App.js","index.js"],"names":["config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APP_ID","firebaseApp","firebase","apps","length","app","initializeApp","auth","firestore","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","generateUserDocument","user","additionalData","a","userRef","doc","uid","get","exists","email","displayName","photoURL","set","console","error","getUserDocument","userDocument","data","UserContext","createContext","UserProvider","props","useState","setUser","useEffect","onAuthStateChanged","userAuth","Provider","value","children","TodoContext","todo","DateContext","today","format","Date","DateProvider","date","setDate","setTodo","PasswordReset","setEmail","emailHasBeenSent","setEmailHasBeenSent","setError","S","Container","Form","Title","Accept","Item","type","name","id","placeholder","onChange","event","currentTarget","Button","className","onClick","preventDefault","sendPasswordResetEmail","then","setTimeout","toast","success","catch","sendResetEmail","to","styled","div","Links","span","SignIn","password","setPassword","setSuccess","signInWithEmailAndPasswordHandler","signInWithEmailAndPassword","message","onChangeHandler","Error","prefix","UserOutlined","suffix","title","InfoCircleOutlined","style","color","Password","plain","GoogleOutlined","SignUp","setDisplayName","history","useHistory","createUserWithEmailAndPasswordHandler","createUserWithEmailAndPassword","log","push","Toast","Authentication","path","component","from","Months","currentDate","setCurrentDate","Header","HeaderCellAnlge","subMonths","LeftOutlined","HeaderCell","addMonths","RightOutlined","TheDate","document","querySelector","scrollIntoView","behavior","selectedDate","setSelectedDate","useContext","Scroll","monthStart","startOfMonth","startDate","lastDayOfThisMonth","getDate","lastDayOfMonth","daysOfWeek","days","day","formattedDate","i","cloneDay","Days","isSameMonth","isSameDay","onDateClick","DaysOfWeek","getDay","addDays","Cells","alignCenter","Calendar","ListTodo","todos","setTodos","done","setDone","unsubscribe","collection","where","onSnapshot","snapshot","docs","map","description","datatime","List","dataSource","renderItem","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","update","onChangeDone","ListItem","Meta","undefined","redirectClick","DeleteOutlined","delete","res","querySnapshot","forEach","ref","ul","ProfilePage","SignOut","signOut","PlusCircleOutlined","EditTodo","isDone","Main","Buttons","goBack","EditOutlined","CheckboxTrue","CheckboxFalse","AddTodo","setTitle","setDescription","target","TextArea","Icon","CloseCircleOutlined","CheckCircleOutlined","add","userId","AddTodoPage","EditTodoPage","defaultValue","rows","Todo","Routes","App","require","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.88ce2457.chunk.js","sourcesContent":["import {\r\n  REACT_APP_API_KEY,\r\n  REACT_APP_APP_ID,\r\n  REACT_APP_AUTH_DOMAIN,\r\n  REACT_APP_DATABASE_URL,\r\n  REACT_APP_MESSAGING_SENDER_ID,\r\n  REACT_APP_PROJECT_ID,\r\n  REACT_APP_STORAGE_BUCKET,\r\n} from './base';\r\n\r\nconst config = {\r\n  apiKey: REACT_APP_API_KEY,\r\n  authDomain: REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: REACT_APP_DATABASE_URL,\r\n  projectId: REACT_APP_PROJECT_ID,\r\n  storageBucket: REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: REACT_APP_APP_ID,\r\n};\r\nexport default config;\r\n","export const REACT_APP_API_KEY = process.env.REACT_APP_API_KEY;\r\nexport const REACT_APP_AUTH_DOMAIN = process.env.REACT_APP_AUTH_DOMAIN;\r\nexport const REACT_APP_DATABASE_URL = process.env.REACT_APP_DATABASE_URL;\r\nexport const REACT_APP_PROJECT_ID = process.env.REACT_APP_PROJECT_ID;\r\nexport const REACT_APP_STORAGE_BUCKET = process.env.REACT_APP_STORAGE_BUCKET;\r\nexport const REACT_APP_MESSAGING_SENDER_ID =\r\n  process.env.REACT_APP_MESSAGING_SENDER_ID;\r\nexport const REACT_APP_APP_ID = process.env.REACT_APP_APP_ID;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport config from './firebaseConfig';\r\n\r\n// Check if we have already initialized an app\r\nconst firebaseApp = !firebase.apps.length\r\n  ? firebase.initializeApp(config)\r\n  : firebase.app();\r\n\r\nexport const auth = firebaseApp.auth();\r\nexport const firestore = firebaseApp.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const signInWithGoogle = () => {\r\n  auth.signInWithPopup(provider);\r\n};\r\n\r\nexport const generateUserDocument = async (user, additionalData) => {\r\n  if (!user) return;\r\n\r\n  const userRef = firestore.doc(`users/${user.uid}`);\r\n  const snapshot = await userRef.get();\r\n\r\n  if (!snapshot.exists) {\r\n    const { email, displayName, photoURL } = user;\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        photoURL,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating user document', error);\r\n    }\r\n  }\r\n  return getUserDocument(user.uid);\r\n};\r\n\r\nconst getUserDocument = async uid => {\r\n  if (!uid) return null;\r\n  try {\r\n    const userDocument = await firestore.doc(`users/${uid}`).get();\r\n\r\n    return {\r\n      uid,\r\n      ...userDocument.data(),\r\n    };\r\n  } catch (error) {\r\n    console.error('Error fetching user', error);\r\n  }\r\n};\r\n","import React, { createContext, useEffect, useState } from 'react';\r\nimport { auth, generateUserDocument } from '../firebase';\r\n\r\nexport const UserContext = createContext({ user: null });\r\n\r\nexport function UserProvider(props) {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(async userAuth => {\r\n      const user = await generateUserDocument(userAuth);\r\n      setUser(user);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={user}>{props.children}</UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default UserProvider;\r\n","import { format } from 'date-fns';\r\nimport React, { createContext, useState } from 'react';\r\n\r\nexport const TodoContext = createContext({ todo: null });\r\nexport const DateContext = createContext();\r\nconst today = format(new Date(), 'dd MM yyyy');\r\nexport function DateProvider(props) {\r\n  const [date, setDate] = useState(today);\r\n  const [todo, setTodo] = useState(null);\r\n  return (\r\n    <DateContext.Provider value={[date, setDate]}>\r\n      <TodoContext.Provider value={[todo, setTodo]}>\r\n        {props.children}\r\n      </TodoContext.Provider>\r\n    </DateContext.Provider>\r\n  );\r\n}\r\n\r\nexport default DateProvider;\r\n","import React, { useState } from 'react';\r\nimport { auth } from '../../../firebase/index';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Form, Input } from 'antd';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst PasswordReset = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === 'userEmail') {\r\n      setEmail(value);\r\n    }\r\n  };\r\n\r\n  const sendResetEmail = event => {\r\n    event.preventDefault();\r\n    auth\r\n      .sendPasswordResetEmail(email)\r\n      .then(() => {\r\n        setEmailHasBeenSent(true);\r\n        setTimeout(() => {\r\n          setEmailHasBeenSent(false);\r\n        }, 3000);\r\n        setError(toast.success('Please check your email'));\r\n      })\r\n      .catch(() => {\r\n        setError(toast.error('Please enter a valid email'));\r\n      });\r\n  };\r\n  return (\r\n    <S.Container>\r\n      <S.Form>\r\n        <Form>\r\n          <S.Title>Reset your Password</S.Title>\r\n          {emailHasBeenSent && (\r\n            <S.Accept>An email has been sent to you!</S.Accept>\r\n          )}\r\n          {error !== null && (\r\n            <div>\r\n              <Toaster />\r\n            </div>\r\n          )}\r\n          <Form.Item>\r\n            <Input\r\n              type=\"email\"\r\n              name=\"userEmail\"\r\n              id=\"userEmail\"\r\n              value={email}\r\n              placeholder=\"Input your email\"\r\n              onChange={onChangeHandler}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <S.Button>\r\n              <button\r\n                className=\"ResetPas\"\r\n                onClick={event => {\r\n                  sendResetEmail(event);\r\n                }}>\r\n                Send me a reset link\r\n              </button>\r\n            </S.Button>\r\n          </Form.Item>\r\n          <Link to=\"/signIn\">&larr; back to sign in page</Link>\r\n        </Form>\r\n      </S.Form>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n\r\nconst S = {\r\n  Container: styled.div`\r\n    // max-width: 750px;\r\n    // margin: 0 auto;\r\n    // margin-top: 50px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    height: 500px;\r\n    border-radius: 3px;\r\n    padding-top: 20px;\r\n  `,\r\n  Button: styled.div`\r\n    width: 250px;\r\n    & > .ResetPas {\r\n      width: 200px;\r\n      background: rgb(151, 11, 221);\r\n      background: linear-gradient(\r\n        90deg,\r\n        rgba(151, 11, 221, 1) 0%,\r\n        rgba(128, 11, 93, 1) 35%,\r\n        rgba(237, 120, 10, 1) 100%\r\n      );\r\n      border: none;\r\n      font-size: 18px;\r\n      height: 30px;\r\n      color: white;\r\n      transition: 0.4s linear;\r\n    }\r\n    & > .ResetPas:hover {\r\n      background-color: #e1dfdf;\r\n      color: black;\r\n      border: none;\r\n    }\r\n  `,\r\n  Form: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    border: 1px solid black;\r\n    padding: 80px;\r\n    box-shadow: inset 0 0 0 1px #337ab7;\r\n    @media (max-width: 768px) {\r\n      padding: 0;\r\n      box-shadow: none;\r\n      border: none;\r\n    }\r\n  `,\r\n  Title: styled.div`\r\n    font-size: 30px;\r\n    font-style: italic;\r\n    padding-bottom: 30px;\r\n  `,\r\n  Links: styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    text-align: center;\r\n    justify-content: space-between;\r\n    margin: 20px 0;\r\n    & > Link {\r\n      color: black;\r\n    }\r\n  `,\r\n  Accept: styled.span`\r\n    color: green;\r\n  `,\r\n};\r\n","/* eslint-disable react/no-unescaped-entities */\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { signInWithGoogle } from '../../../firebase/index';\r\nimport { auth } from '../../../firebase/index';\r\nimport styled from 'styled-components';\r\nimport { Form, Input, Divider, Tooltip } from 'antd';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport {\r\n  UserOutlined,\r\n  GoogleOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst SignIn = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n\r\n  const signInWithEmailAndPasswordHandler = async (event, email, password) => {\r\n    event.preventDefault();\r\n    try {\r\n      setTimeout(await auth.signInWithEmailAndPassword(email, password), 3000);\r\n      setSuccess(toast.success('Good!'));\r\n    } catch (error) {\r\n      setError(toast.error(error.message));\r\n      console.error('Error signing in with password and email', error);\r\n    }\r\n  };\r\n\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === 'userEmail') {\r\n      setEmail(value);\r\n    } else if (name === 'userPassword') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <S.Container>\r\n        <S.Form>\r\n          <Form>\r\n            <S.Title>Clever Todo List</S.Title>\r\n            <Divider />\r\n            <p>\r\n              Welcome to Clever Todo list.\r\n              <br />\r\n              Please login to your account\r\n            </p>\r\n            <Divider />\r\n            {error !== null && (\r\n              <>\r\n                <S.Error>{error.message}</S.Error>\r\n                <Toaster />\r\n              </>\r\n            )}\r\n            {success !== null && (\r\n              <>\r\n                <Toaster />\r\n              </>\r\n            )}\r\n            <Form.Item>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"userEmail\"\r\n                value={email}\r\n                placeholder=\"Your email\"\r\n                id=\"userEmail\"\r\n                onChange={event => onChangeHandler(event)}\r\n                prefix={<UserOutlined />}\r\n                suffix={\r\n                  <Tooltip title=\"Extra information\">\r\n                    <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                  </Tooltip>\r\n                }\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Input.Password\r\n                type=\"password\"\r\n                name=\"userPassword\"\r\n                value={password}\r\n                placeholder=\"Your Password\"\r\n                id=\"userPassword\"\r\n                onChange={event => onChangeHandler(event)}\r\n                suffix={\r\n                  <Tooltip title=\"Extra information\">\r\n                    <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                  </Tooltip>\r\n                }\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <S.Button>\r\n                <button\r\n                  className=\"SignIn\"\r\n                  onClick={event => {\r\n                    signInWithEmailAndPasswordHandler(event, email, password);\r\n                  }}>\r\n                  Login\r\n                </button>\r\n              </S.Button>\r\n              <S.Links>\r\n                <Link to=\"/signUp\">\r\n                  <span className=\"SignUp\">Sign up </span>\r\n                </Link>{' '}\r\n                <br />\r\n                <Link to=\"/passwordReset\">\r\n                  <span>Forgot Password?</span>\r\n                </Link>\r\n              </S.Links>\r\n            </Form.Item>\r\n            <Divider plain>Or Login Using</Divider>\r\n            <Form.Item>\r\n              <S.Button>\r\n                <button\r\n                  className=\"Google\"\r\n                  onClick={() => {\r\n                    signInWithGoogle();\r\n                  }}>\r\n                  <GoogleOutlined />\r\n                  <span>Google</span>\r\n                </button>\r\n              </S.Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </S.Form>\r\n      </S.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n\r\nconst S = {\r\n  Container: styled.div`\r\n    // max-width: 750px;\r\n    // margin: 0 auto;\r\n    // margin-top: 50px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    height: 500px;\r\n    border-radius: 3px;\r\n    padding-top: 20px;\r\n  `,\r\n  Button: styled.div`\r\n    width: 200px;\r\n    & > .SignIn {\r\n      width: 200px;\r\n      background: rgb(151, 11, 221);\r\n      background: linear-gradient(\r\n        90deg,\r\n        rgba(151, 11, 221, 1) 0%,\r\n        rgba(128, 11, 93, 1) 35%,\r\n        rgba(237, 120, 10, 1) 100%\r\n      );\r\n      border: none;\r\n      font-size: 18px;\r\n      height: 30px;\r\n      color: white;\r\n      transition: 0.4s linear;\r\n    }\r\n    & > .SignIn:hover {\r\n      background-color: #e1dfdf;\r\n      color: black;\r\n      border: none;\r\n    }\r\n    & > .Google {\r\n      width: 200px;\r\n      background-color: white;\r\n      border: none;\r\n      font-size: 15px;\r\n      height: 40px;\r\n      transition: 0.4s linear;\r\n    }\r\n    & > .Google:hover {\r\n      box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\r\n        0 10px 10px rgba(0, 0, 0, 0.22);\r\n    }\r\n    & > .Google > span {\r\n      margin-left: 10px;\r\n    }\r\n  `,\r\n  Form: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    border: 1px solid black;\r\n    padding: 80px;\r\n    box-shadow: inset 0 0 0 1px #337ab7;\r\n    @media (max-width: 768px) {\r\n      box-shadow: none;\r\n      border: none;\r\n    }\r\n  `,\r\n  Title: styled.span`\r\n    font-size: 30px;\r\n    font-style: italic;\r\n  `,\r\n  Links: styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    text-align: center;\r\n    justify-content: space-between;\r\n    margin: 20px 0;\r\n    & > Link {\r\n      color: black;\r\n    }\r\n    & > Link > .SignUp {\r\n      border: 1px solid black;\r\n    }\r\n  `,\r\n  Error: styled.span`\r\n    color: red;\r\n  `,\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport { auth, signInWithGoogle } from '../../../firebase/index';\r\nimport styled from 'styled-components';\r\nimport { Form, Input, Divider, Tooltip } from 'antd';\r\nimport { UserOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [displayName, setDisplayName] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const history = useHistory();\r\n  const createUserWithEmailAndPasswordHandler = async (\r\n    event,\r\n    email,\r\n    password,\r\n  ) => {\r\n    event.preventDefault();\r\n    setSuccess(toast.success('Good!'));\r\n    try {\r\n      const { user } = await auth.createUserWithEmailAndPassword(\r\n        email,\r\n        password,\r\n      );\r\n    } catch (error) {\r\n      setError(toast.error(error.message));\r\n\r\n      console.log(error.message);\r\n    }\r\n\r\n    setEmail('');\r\n    setPassword('');\r\n    setDisplayName('');\r\n  };\r\n\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === 'userEmail') {\r\n      setEmail(value);\r\n    } else if (name === 'userPassword') {\r\n      setPassword(value);\r\n    } else if (name === 'displayName') {\r\n      setDisplayName(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <S.Container>\r\n        <S.Form>\r\n          <Form>\r\n            <S.Title>Sign Up</S.Title>\r\n            {error !== null && (\r\n              <>\r\n                <S.Error>{error.message}</S.Error>\r\n                <Toaster />\r\n              </>\r\n            )}\r\n            {success !== null && (\r\n              <>\r\n                {console.log(success)}\r\n                <Toaster />\r\n              </>\r\n            )}\r\n            <Form.Item>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"displayName\"\r\n                value={displayName}\r\n                placeholder=\"E.g: Faruq\"\r\n                id=\"displayName\"\r\n                onChange={event => onChangeHandler(event)}\r\n                prefix={<UserOutlined />}\r\n                suffix={\r\n                  <Tooltip title=\"Extra information\">\r\n                    <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                  </Tooltip>\r\n                }\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"userEmail\"\r\n                value={email}\r\n                placeholder=\"E.g: faruq123@gmail.com\"\r\n                id=\"userEmail\"\r\n                onChange={event => onChangeHandler(event)}\r\n                prefix={<UserOutlined />}\r\n                suffix={\r\n                  <Tooltip title=\"Extra information\">\r\n                    <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                  </Tooltip>\r\n                }\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Input.Password\r\n                type=\"password\"\r\n                name=\"userPassword\"\r\n                value={password}\r\n                placeholder=\"Your Password\"\r\n                id=\"userPassword\"\r\n                onChange={event => onChangeHandler(event)}\r\n                suffix={\r\n                  <Tooltip title=\"Extra information\">\r\n                    <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                  </Tooltip>\r\n                }\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <S.Button>\r\n                <button\r\n                  className=\"SignUp\"\r\n                  onClick={event => {\r\n                    createUserWithEmailAndPasswordHandler(\r\n                      event,\r\n                      email,\r\n                      password,\r\n                    );\r\n                    history.push('/calendar');\r\n                  }}>\r\n                  Sign up\r\n                </button>\r\n              </S.Button>\r\n              <S.Links>\r\n                <p> Already have an account?</p>\r\n                <Link to=\"/signIn\">Sign in</Link>\r\n              </S.Links>\r\n            </Form.Item>\r\n            <Divider plain>Or SignUp Using</Divider>\r\n            <Form.Item>\r\n              <S.Button>\r\n                <button\r\n                  onClick={() => {\r\n                    try {\r\n                      signInWithGoogle();\r\n                    } catch (error) {\r\n                      console.error('Error signing in with Google', error);\r\n                    }\r\n                  }}>\r\n                  Sign In with Google\r\n                </button>\r\n              </S.Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </S.Form>\r\n      </S.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n\r\nconst S = {\r\n  Container: styled.div`\r\n    // max-width: 750px;\r\n    // margin: 0 auto;\r\n    // margin-top: 50px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    height: 500px;\r\n    border-radius: 3px;\r\n    padding-top: 20px;\r\n  `,\r\n  Button: styled.div`\r\n    width: 200px;\r\n    & > .SignUp {\r\n      width: 200px;\r\n      background: rgb(151, 11, 221);\r\n      background: linear-gradient(\r\n        90deg,\r\n        rgba(151, 11, 221, 1) 0%,\r\n        rgba(128, 11, 93, 1) 35%,\r\n        rgba(237, 120, 10, 1) 100%\r\n      );\r\n      border: none;\r\n      font-size: 18px;\r\n      height: 30px;\r\n      color: white;\r\n      transition: 0.4s linear;\r\n    }\r\n    & > .SignUp:hover {\r\n      background-color: #e1dfdf;\r\n      color: black;\r\n      border: none;\r\n    }\r\n    & > .Google {\r\n      width: 200px;\r\n      background-color: white;\r\n      border: none;\r\n      font-size: 15px;\r\n      height: 40px;\r\n      transition: 0.4s linear;\r\n    }\r\n    & > .Google:hover {\r\n      box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\r\n        0 10px 10px rgba(0, 0, 0, 0.22);\r\n    }\r\n    & > .Google > span {\r\n      margin-left: 10px;\r\n    }\r\n  `,\r\n  Form: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    border: 1px solid black;\r\n    padding: 80px;\r\n    box-shadow: inset 0 0 0 1px #337ab7;\r\n    @media (max-width: 768px) {\r\n      box-shadow: none;\r\n      border: none;\r\n    }\r\n  `,\r\n  Title: styled.div`\r\n    font-size: 30px;\r\n    font-style: italic;\r\n    padding-bottom: 30px;\r\n  `,\r\n  Links: styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    text-align: center;\r\n    justify-content: space-between;\r\n    margin: 20px 0;\r\n    & > Link {\r\n      color: black;\r\n    }\r\n  `,\r\n  Error: styled.span`\r\n    color: red;\r\n  `,\r\n  Toast: styled.div`\r\n    color: red;\r\n  `,\r\n};\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport PasswordReset from './PasswordReset/PasswordReset';\r\nimport SignIn from './SignIn/SignIn';\r\nimport SignUp from './SignUp/SignUp';\r\n\r\nexport default function Authentication() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/signIn\" component={SignIn} />\r\n      <Route path=\"/signUp\" component={SignUp} />\r\n      <Route path=\"/passwordReset\" component={PasswordReset} />\r\n      <Redirect from=\"/\" to=\"/signIn\" />\r\n    </Switch>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { addMonths, format, subMonths } from 'date-fns';\r\nimport styled from 'styled-components';\r\nimport { RightOutlined, LeftOutlined } from '@ant-design/icons';\r\nexport function Months({ currentDate, setCurrentDate }) {\r\n  const dateFormat = 'MMMM yyyy';\r\n\r\n  const nextMonth = () => {\r\n    setCurrentDate(addMonths(currentDate, 1));\r\n  };\r\n\r\n  const prevMonth = () => {\r\n    setCurrentDate(subMonths(currentDate, 1));\r\n  };\r\n\r\n  return (\r\n    <S.Header>\r\n      <S.HeaderCellAnlge onClick={prevMonth}>\r\n        <LeftOutlined />\r\n      </S.HeaderCellAnlge>\r\n      <S.HeaderCell>\r\n        <span>{format(currentDate, dateFormat)}</span>\r\n      </S.HeaderCell>\r\n      <S.HeaderCellAnlge onClick={nextMonth}>\r\n        <RightOutlined />\r\n      </S.HeaderCellAnlge>\r\n    </S.Header>\r\n  );\r\n}\r\n\r\nconst S = {\r\n  Header: styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    padding: 10px 0;\r\n    border-bottom: 1px solid lightgray;\r\n    background: white;\r\n    margin: 0 auto;\r\n  `,\r\n  HeaderCell: styled.span`\r\n    margin: 0 auto;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    color: #b629fd;\r\n  `,\r\n  HeaderCellAnlge: styled.span`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    width: 30px;\r\n    background: #b629fd;\r\n    border-radius: 50%;\r\n    color: white;\r\n  `,\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\r\n\r\nimport {\r\n  addDays,\r\n  format,\r\n  getDate,\r\n  isSameDay,\r\n  isSameMonth,\r\n  lastDayOfMonth,\r\n  startOfMonth,\r\n} from 'date-fns';\r\nimport { DateContext } from '../../../../providers/DateProvider';\r\n\r\nexport const TheDate = props => {\r\n  //Scroll to this day\r\n  const scrollToDate = () => {\r\n    let selectedDay = document.querySelector('.selected');\r\n    selectedDay.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return scrollToDate();\r\n  }, []);\r\n\r\n  const { currentDate } = props;\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [, setDate] = useContext(DateContext);\r\n\r\n  const onDateClick = day => {\r\n    setSelectedDate(day);\r\n    setDate(format(day, 'dd MM yyyy'));\r\n    // console.log(date);\r\n    // console.log(day);\r\n  };\r\n\r\n  const Cells = () => {\r\n    const monthStart = startOfMonth(currentDate);\r\n    const startDate = startOfMonth(monthStart);\r\n\r\n    const lastDayOfThisMonth = getDate(lastDayOfMonth(currentDate));\r\n    const daysOfWeek = ['Sat', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sun'];\r\n    const dateFormat = 'd';\r\n    let days = [];\r\n    let day = startDate;\r\n    let formattedDate = '';\r\n\r\n    for (let i = 0; i < lastDayOfThisMonth; i++) {\r\n      formattedDate = format(day, dateFormat);\r\n      const cloneDay = day;\r\n      days.push(\r\n        <S.Days\r\n          className={`${\r\n            !isSameMonth(day, monthStart)\r\n              ? 'disabled'\r\n              : isSameDay(day, selectedDate)\r\n              ? 'selected'\r\n              : ''\r\n          }`}\r\n          key={day}\r\n          onClick={() => onDateClick(cloneDay)}>\r\n          <S.DaysOfWeek>{daysOfWeek[day.getDay()]}</S.DaysOfWeek>\r\n          <span>{formattedDate}</span>\r\n        </S.Days>,\r\n      );\r\n      day = addDays(day, 1);\r\n    }\r\n    return days;\r\n  };\r\n\r\n  return (\r\n    <S.Scroll>\r\n      <ScrollMenu data={Cells()} alignCenter={false} />\r\n    </S.Scroll>\r\n  );\r\n};\r\n\r\nconst S = {\r\n  Days: styled.span`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 10px 10px;\r\n    margin-right: 10px;\r\n    font-size: 20px;\r\n    width: 36px;\r\n    &:hover {\r\n      border-radius: 30%;\r\n      background-color: #04083d;\r\n      color: white;\r\n    }\r\n    &:active {\r\n      border: 1px solid orange;\r\n      border-radius: 30%;\r\n      background-color: white;\r\n      color: orange;\r\n    }\r\n  `,\r\n  DaysOfWeek: styled.span`\r\n    font-size: 15px;\r\n    color: ligthgray;\r\n  `,\r\n  Scroll: styled.div`\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    padding: 10px 10px;\r\n  `,\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Months } from './Months/Months.jsx';\r\nimport { TheDate } from './TheDate/TheDate';\r\n\r\nexport default function Calendar() {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n  return (\r\n    <S.Calendar>\r\n      <Months currentDate={currentDate} setCurrentDate={setCurrentDate} />\r\n      <TheDate currentDate={currentDate} />\r\n    </S.Calendar>\r\n  );\r\n}\r\n\r\nconst S = {\r\n  Calendar: styled.div`\r\n    display: block;\r\n    position: relative;\r\n    max-width: 750px;\r\n    margin: 0 auto;\r\n    border-radius: 20px;\r\n    height: auto;\r\n    margin: 30px auto;\r\n    @media (max-width: 768px) {\r\n      max-width: 400px;\r\n      margin: 0 auto;\r\n    }\r\n    @media (max-width: 575px) {\r\n      max-width: 400px;\r\n      max-height: 200px;\r\n      margin: 0 auto;\r\n      margin-top: 20px;\r\n      & > div {\r\n        font-size: 10px;\r\n      }\r\n    }\r\n  `,\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { firestore } from '../../../firebase/index';\r\nimport styled from 'styled-components';\r\nimport { DateContext, TodoContext } from '../../../providers/DateProvider';\r\nimport { List, Switch } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../../../providers/UserProvider';\r\nimport {\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  DeleteOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst ListTodo = () => {\r\n  const [, setTodo] = useContext(TodoContext);\r\n  const [day] = useContext(DateContext);\r\n  const history = useHistory();\r\n  const [todos, setTodos] = useState([]);\r\n  const [, setDone] = useState(todos.done);\r\n  const user = useContext(UserContext);\r\n  useEffect(() => {\r\n    console.log('useEffect Hook!!!');\r\n    let unsubscribe;\r\n    if (day) {\r\n      // const date = `${format(day, 'dd MM yyyy')}`;\r\n      unsubscribe = firestore\r\n        .collection('todos')\r\n        .where('userId', '==', user.uid)\r\n        .where('day', '==', day)\r\n        .onSnapshot(snapshot => {\r\n          console.log('Firebase Snap!');\r\n          setTodos(\r\n            snapshot.docs.map(doc => {\r\n              return {\r\n                id: doc.id,\r\n                date: day,\r\n                title: doc.data().title,\r\n                description: doc.data().description,\r\n                done: doc.data().done,\r\n                datatime: new Date(),\r\n              };\r\n            }),\r\n          );\r\n        });\r\n    }\r\n\r\n    return () => {\r\n      if (typeof unsubscribe === 'function') {\r\n        unsubscribe();\r\n      }\r\n    };\r\n  }, [day]);\r\n\r\n  const redirectClick = todo => {\r\n    setTodo(todo);\r\n    history.push('/todo');\r\n  };\r\n\r\n  const onChangeDone = todo => {\r\n    let done = !todo.done;\r\n    setDone(!done);\r\n    console.log(done);\r\n    firestore.collection('todos').doc(todo.id).update({\r\n      done: done,\r\n    });\r\n  };\r\n  const deleteTodo = id => {\r\n    firestore\r\n      .collection('todos')\r\n      .doc(id)\r\n      .delete()\r\n      .then(res => {\r\n        console.log('Deleted!', res);\r\n      });\r\n  };\r\n\r\n  const handleFilter = todos => {\r\n    firestore\r\n      .collection('todos')\r\n      .where('done', '==', true)\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          doc.ref\r\n            .delete()\r\n            .then(() => {\r\n              console.log('Document successfully deleted!');\r\n            })\r\n            .catch(function (error) {\r\n              console.error('Error removing document: ', error);\r\n            });\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.List>\r\n        <List\r\n          dataSource={todos}\r\n          renderItem={todo => (\r\n            <>\r\n              <List.Item key={todo.id}>\r\n                <Switch\r\n                  checkedChildren={<CheckOutlined />}\r\n                  unCheckedChildren={<CloseOutlined />}\r\n                  defaultChecked={todo.done}\r\n                  className={todo.done == true ? 'check' : 'uncheck'}\r\n                  onClick={() => {\r\n                    onChangeDone(todo);\r\n                  }}\r\n                />\r\n                <S.ListItem>\r\n                  <List.Item.Meta\r\n                    className={todo.done ? 'todo-completed' : undefined}\r\n                    title={todo.title}\r\n                    onClick={() => {\r\n                      redirectClick(todo);\r\n                    }}\r\n                  />\r\n                </S.ListItem>\r\n                <DeleteOutlined onClick={() => deleteTodo(todo.id)} />\r\n              </List.Item>\r\n            </>\r\n          )}\r\n        />\r\n      </S.List>\r\n      <button\r\n        onClick={() => {\r\n          handleFilter(todos);\r\n        }}>\r\n        Clear All Completed\r\n      </button>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default ListTodo;\r\n\r\nconst S = {\r\n  Container: styled.div`\r\n    width: 600px;\r\n    max-height: 500px;\r\n    margin: 20px auto;\r\n    // background-color: rgb(243, 243, 243);\r\n    @media (max-width: 767px) {\r\n      overflow: scroll;\r\n      max-width: 400px;\r\n      max-height: 300px;\r\n      margin-top: 20px;\r\n      margin-bottom: 40px;\r\n    }\r\n    @media (max-width: 575px) {\r\n      overflow: scroll;\r\n      max-width: 300px;\r\n      max-height: 200px;\r\n      margin: 30px auto;\r\n    }\r\n  `,\r\n  List: styled.ul`\r\n    list-style-type: none;\r\n    padding: 0;\r\n    margin: 0;\r\n  `,\r\n  ListItem: styled.div`\r\n    margin: 0 auto;\r\n    border: 1px solid lightgray;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: space-between;\r\n    width: 200px;\r\n    text-align: center;\r\n    background-color: white;\r\n    @media (max-width: 575px) {\r\n      max-width: 100px;\r\n      margin: 0 auto;\r\n    }\r\n  `,\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport Calendar from '../Calendar/Calendar';\r\nimport { auth } from '../../../firebase/index';\r\nimport ListTodo from '../ListTodo/ListTodo';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\n\r\nfunction ProfilePage() {\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <S.Container>\r\n        <S.SignOut>\r\n          <button\r\n            onClick={() => {\r\n              auth.signOut();\r\n            }}>\r\n            Sign out\r\n          </button>\r\n        </S.SignOut>\r\n        <Calendar />\r\n        {/* <AddTodo /> */}\r\n        <ListTodo />\r\n        <S.Button>\r\n          <Button\r\n            onClick={() => {\r\n              history.push('/addtodo');\r\n            }}>\r\n            <PlusCircleOutlined />\r\n            Add a New Task\r\n          </Button>\r\n        </S.Button>\r\n      </S.Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n\r\nconst S = {\r\n  Container: styled.div`\r\n    max-width: 700px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    @media (max-width: 762px) {\r\n      max-width: 400px;\r\n      max-height: 700px;\r\n      margin: 0 auto;\r\n    }\r\n    @media (max-width: 575px) {\r\n      max-width: 400px;\r\n      max-height: 400px;\r\n      margin: 0 auto;\r\n    }\r\n  `,\r\n  Button: styled.div`\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    border: none;\r\n    & > button {\r\n      background-color: #b629fd;\r\n      color: white;\r\n      border: none;\r\n    }\r\n  `,\r\n  SignOut: styled.div`\r\n    color: #000080;\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n    font-size: 20px;\r\n    & > button {\r\n      background-color: black;\r\n      color: white;\r\n      border: none;\r\n    }\r\n    @media (max-width: 575px) {\r\n      font-size: 13px;\r\n    }\r\n  `,\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TodoContext } from '../../../providers/DateProvider';\r\nimport { firestore } from '../../../firebase/index';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Checkbox } from 'antd';\r\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nfunction EditTodo() {\r\n  const [todo] = useContext(TodoContext);\r\n  const [isDone, setDone] = useState(todo.done);\r\n  const history = useHistory();\r\n  const [, setSuccess] = useState();\r\n\r\n  useEffect(() => {\r\n    firestore.collection('todos').doc(todo.id).update({\r\n      done: isDone,\r\n    });\r\n  });\r\n\r\n  const deleteTodo = id => {\r\n    firestore\r\n      .collection('todos')\r\n      .doc(id)\r\n      .delete()\r\n      .then(res => {\r\n        console.log('Deleted!', res);\r\n      });\r\n    setSuccess(toast.success('Deleted!'));\r\n    setTimeout(() => {\r\n      history.goBack();\r\n    }, 2000);\r\n  };\r\n  const onChange = () => {\r\n    setDone(!isDone);\r\n  };\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <S.Container>\r\n        <S.Header>\r\n          <button\r\n            onClick={() => {\r\n              history.push('/');\r\n            }}>\r\n            {'<'}\r\n          </button>\r\n          <h1>Todo</h1>\r\n        </S.Header>\r\n        <S.Main>\r\n          <h2> {todo.title}</h2>\r\n          <p>{todo.description}</p>\r\n        </S.Main>\r\n        <S.Buttons>\r\n          <button onClick={() => deleteTodo(todo.id)}>\r\n            <DeleteOutlined />\r\n          </button>\r\n          <button onClick={() => history.push('/edittodo')}>\r\n            <EditOutlined />\r\n          </button>\r\n          <S.CheckboxTrue>\r\n            <Checkbox defaultChecked={todo.done} onChange={onChange}>\r\n              Complete\r\n            </Checkbox>\r\n          </S.CheckboxTrue>\r\n        </S.Buttons>\r\n      </S.Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditTodo;\r\n\r\nconst S = {\r\n  Container: styled.div`\r\n    width: 400px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    text-align: center;\r\n    @media (max-width: 760px) {\r\n      width: 300px;\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      margin-right: -50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  `,\r\n  Header: styled.div`\r\n    width: 300px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    & > h1 {\r\n      margin: 0 auto;\r\n    }\r\n    & > button {\r\n      padding-right: 20px;\r\n      margin-left: 10px;\r\n      width: 20px;\r\n      border: none;\r\n      background-color: #f9f6f6;\r\n      border-radius: 40px 40px 40px 40px;\r\n    }\r\n  `,\r\n  Buttons: styled.div`\r\n    width: 300px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    & > button {\r\n      width: 50px;\r\n      background-color: white;\r\n      border: 1px solid gray;\r\n      border-radius: 40px 40px 40px 40px;\r\n    }\r\n  `,\r\n  Main: styled.div`\r\n    & > p {\r\n      color: #5c5c5c;\r\n    }\r\n  `,\r\n  CheckboxTrue: styled.div`\r\n    border-radius: 40px 40px 40px 40px;\r\n    width: 120px;\r\n    background-color: #73fa85;\r\n  `,\r\n  CheckboxFalse: styled.div`\r\n    border-radius: 40px 40px 40px 40px;\r\n    width: 120px;\r\n    background-color: #f95056;\r\n  `,\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useContext } from 'react';\r\nimport { firestore } from '../../../firebase/index';\r\nimport { Form, Input } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { DateContext } from '../../../providers/DateProvider';\r\nimport { UserContext } from '../../../providers/UserProvider';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst AddTodo = () => {\r\n  const [day] = useContext(DateContext);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [, setSuccess] = useState();\r\n  const user = useContext(UserContext);\r\n  const history = useHistory();\r\n  const addTodo = event => {\r\n    // const date = `${format(day, 'dd MM yyyy')}`;\r\n    event.preventDefault();\r\n    firestore.collection('todos').add({\r\n      userId: user.uid,\r\n      title: title,\r\n      description: description,\r\n      day: day,\r\n      done: false,\r\n    });\r\n    setTitle('');\r\n    setDescription('');\r\n    setSuccess(toast.success('Add in your list'));\r\n  };\r\n  const cancelEdit = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <S.Container>\r\n        <S.Header>\r\n          <span\r\n            onClick={() => {\r\n              history.push('/');\r\n            }}>\r\n            {'<'}\r\n          </span>\r\n          <h1>Add Todo</h1>\r\n        </S.Header>\r\n        <Form>\r\n          <Form.Item>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"todoTitle\"\r\n              name=\"todo\"\r\n              value={title}\r\n              placeholder=\"Title\"\r\n              onChange={event => setTitle(event.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Input.TextArea\r\n              type=\"text\"\r\n              id=\"todoDescription\"\r\n              name=\"todo\"\r\n              value={description}\r\n              placeholder=\"Description\"\r\n              onChange={event => setDescription(event.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <S.Buttons>\r\n              <S.Icon>\r\n                <CloseCircleOutlined onClick={cancelEdit} />\r\n              </S.Icon>\r\n              <S.Icon>\r\n                <CheckCircleOutlined onClick={addTodo} />\r\n              </S.Icon>\r\n            </S.Buttons>\r\n          </Form.Item>\r\n        </Form>\r\n      </S.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n\r\nconst S = {\r\n  Container: styled.div`\r\n    width: 300px;\r\n    margin: 0 auto;\r\n    @media (max-width: 768px) {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      margin-right: -50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  `,\r\n  Header: styled.div`\r\n    width: 300px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    & > h1 {\r\n      margin: 0 auto;\r\n    }\r\n    & > button {\r\n      padding-right: 20px;\r\n      margin-left: 10px;\r\n      width: 20px;\r\n      border: none;\r\n      background-color: #f9f6f6;\r\n      border-radius: 40px 40px 40px 40px;\r\n    }\r\n  `,\r\n  Buttons: styled.div`\r\n    width: 300px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    & > button {\r\n      width: 50px;\r\n      background-color: white;\r\n      border: 1px solid gray;\r\n      border-radius: 40px 40px 40px 40px;\r\n    }\r\n  `,\r\n  Icon: styled.span`\r\n  font-size: 30px;S\r\n`,\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport AddTodo from './AddTodo';\r\n\r\nexport const AddTodoPage = () => {\r\n  return (\r\n    <S.Container>\r\n      <div>\r\n        <AddTodo />\r\n      </div>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default AddTodoPage;\r\n\r\nconst S = {\r\n  Container: styled.div`\r\n    width: 200px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    text-align: center;\r\n    // position: absolute;\r\n    // top: 0;\r\n    // left: 50%;\r\n    // margin-right: -50%;\r\n    // transform: translate(-50%, 0);\r\n  `,\r\n};\r\n","import React, { useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TodoContext } from '../../../providers/DateProvider';\r\nimport { Form, Input } from 'antd';\r\nimport { firestore } from '../../../firebase';\r\nimport styled from 'styled-components';\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nexport function EditTodoPage() {\r\n  const [todo, setTodo] = useContext(TodoContext);\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState(todo ? todo.title : '');\r\n  const [description, setDescription] = useState(todo ? todo.description : '');\r\n  const [, setSuccess] = useState();\r\n\r\n  const editTodo = event => {\r\n    event.preventDefault();\r\n    firestore.collection('todos').doc(todo.id).update({\r\n      title: title,\r\n      description: description,\r\n    });\r\n    firestore\r\n      .collection('todos')\r\n      .doc(todo.id)\r\n      .get()\r\n      .then(doc => {\r\n        if (doc.exists)\r\n          setTodo({\r\n            id: doc.id,\r\n            title: doc.data().title,\r\n            description: doc.data().description,\r\n            done: doc.data().done,\r\n          });\r\n      })\r\n      .then(res => {\r\n        setSuccess(toast.success('Update!'));\r\n        console.log('Update!', res);\r\n      });\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <S.Container>\r\n        <Form>\r\n          <S.Header>\r\n            <button\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}>\r\n              {'<'}\r\n            </button>\r\n            <h1>Edit Todo</h1>\r\n          </S.Header>\r\n          <Form.Item>\r\n            <Input\r\n              name=\"title\"\r\n              defaultValue={title}\r\n              onChange={event => setTitle(event.target.value)}></Input>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Input.TextArea\r\n              rows={14}\r\n              name=\"description\"\r\n              defaultValue={description}\r\n              onChange={event => setDescription(event.target.value)}\r\n            />\r\n          </Form.Item>\r\n        </Form>\r\n        <S.Buttons>\r\n          <S.Icon>\r\n            <CloseCircleOutlined onClick={cancelEdit} />\r\n          </S.Icon>\r\n          <S.Icon>\r\n            <CheckCircleOutlined onClick={editTodo} />\r\n          </S.Icon>\r\n        </S.Buttons>\r\n      </S.Container>\r\n    </>\r\n  );\r\n}\r\nexport default EditTodoPage;\r\n\r\nconst S = {\r\n  Container: styled.div`\r\n    max-width: 400px;\r\n    max-height: 500px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space around;\r\n    @media (max-width: 768px) {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      margin-right: -50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  `,\r\n  Header: styled.div`\r\n    width: 300px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    & > h1 {\r\n      margin: 0 auto;\r\n    }\r\n    & > button {\r\n      padding-right: 20px;\r\n      margin-left: 10px;\r\n      width: 20px;\r\n      border: none;\r\n      background-color: #f9f6f6;\r\n      border-radius: 40px 40px 40px 40px;\r\n    }\r\n  `,\r\n  Buttons: styled.div`\r\n    width: 300px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    & > button {\r\n      width: 50px;\r\n      background-color: white;\r\n      border: 1px solid gray;\r\n      border-radius: 40px 40px 40px 40px;\r\n    }\r\n  `,\r\n  Icon: styled.span`\r\n    font-size: 30px;S\r\n  `,\r\n};\r\n","import React from 'react';\r\n\r\nimport ProfilePage from './ProfilePage/ProfilePage';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport EditTodo from './EditTodo/EditTodo';\r\nimport { AddTodoPage } from './AddTodo/AddTodoPage';\r\nimport EditTodoPage from './EditTodo/EditTodoPage';\r\n\r\nexport const Todo = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/calendar\" component={ProfilePage} />\r\n        <Route path=\"/edittodo\" component={EditTodoPage} />\r\n        <Route path=\"/addtodo\" component={AddTodoPage} />\r\n        <Route path=\"/todo\" component={EditTodo} />\r\n        <Route path=\"/\" component={ProfilePage} />\r\n        <Route path=\"/\">\r\n          <Redirect to=\"/calendar\" />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useContext } from 'react';\r\nimport { UserContext } from '../providers/UserProvider';\r\nimport DateProvider from '../providers/DateProvider';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Authentication from '../modules/Authentication/Authentication';\r\nimport Todo from '../modules/Todos/Todo';\r\n\r\nexport default function Routes() {\r\n  const user = useContext(UserContext);\r\n\r\n  return user ? (\r\n    <DateProvider>\r\n      <Router>\r\n        <Todo />\r\n      </Router>\r\n    </DateProvider>\r\n  ) : (\r\n    <Router>\r\n      <Authentication />\r\n    </Router>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport UserProvider from './providers/UserProvider';\r\nimport Routes from './routes/Routes';\r\nfunction App() {\r\n  return (\r\n    <UserProvider>\r\n      <Routes />\r\n    </UserProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}
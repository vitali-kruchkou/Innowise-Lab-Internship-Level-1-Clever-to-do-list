{"version":3,"sources":["firebase/firebaseConfig.js","firebase/base.js","firebase/index.js","providers/UserProvider.jsx","providers/DateProvider.jsx","modules/Authentication/PasswordReset/StyledPasswordReset.js","modules/Authentication/PasswordReset/PasswordReset.jsx","modules/Authentication/SignIn/StyledSignIn.js","modules/Authentication/SignIn/SignIn.jsx","modules/Authentication/SignUp/StyledSignUp.js","modules/Authentication/SignUp/SignUp.jsx","modules/Authentication/Authentication.jsx","modules/Todos/Calendar/Months/StyledMonths.js","modules/Todos/Calendar/Months/Months.jsx","modules/Todos/Calendar/TheDate/StyledTheDate.js","modules/Todos/Calendar/TheDate/TheDate.jsx","modules/Todos/Calendar/StyledCalendar.js","modules/Todos/Calendar/Calendar.jsx","modules/Todos/ListTodo/StyledListTodo.js","modules/Todos/ListTodo/ListTodo.jsx","modules/Todos/ProfilePage/StyledProfilePage.js","modules/Todos/ProfilePage/ProfilePage.jsx","modules/Todos/EditTodo/StyledEditTodo.js","modules/Todos/EditTodo/EditTodo.jsx","modules/Todos/AddTodo/StyledAddTodo.js","modules/Todos/AddTodo/AddTodo.jsx","modules/Todos/AddTodo/AddTodoPage.jsx","modules/Todos/EditTodo/EditTodoPage.jsx","modules/Todos/Todo.jsx","routes/Routes.jsx","App.js","index.js"],"names":["config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APP_ID","firebaseApp","firebase","apps","length","app","initializeApp","auth","firestore","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","generateUserDocument","user","additionalData","a","userRef","doc","uid","get","exists","email","displayName","photoURL","set","console","error","getUserDocument","userDocument","data","signInEmailAndPassword","event","password","preventDefault","signInWithEmailAndPassword","toast","success","message","signUpEmailAndPassword","createUserWithEmailAndPassword","deleteTodoInList","id","collection","delete","then","updateDone","todo","isDone","update","done","UserContext","createContext","UserProvider","props","useState","setUser","useEffect","onAuthStateChanged","userAuth","Provider","value","children","TodoContext","DateContext","today","format","Date","DateProvider","date","setDate","setTodo","Style","Container","styled","div","Button","Form","Title","Links","Accept","span","PasswordReset","setEmail","Item","type","name","placeholder","onChange","currentTarget","className","onClick","sendPasswordResetEmail","catch","resetPassword","to","Styled","Error","SignIn","setPassword","onChangeHandler","prefix","UserOutlined","suffix","title","InfoCircleOutlined","style","color","Password","signInWithEmailAndPasswordHandler","plain","GoogleOutlined","Toast","SignUp","setDisplayName","history","useHistory","logginGoogle","createUserWithEmailAndPasswordHandler","push","Authentication","path","component","from","Header","HeaderCell","HeaderCellAnlge","Months","currentDate","setCurrentDate","subMonths","LeftOutlined","addMonths","RightOutlined","Days","DaysOfWeek","Scroll","TheDate","document","querySelector","scrollIntoView","behavior","selectedDate","setSelectedDate","useContext","monthStart","startOfMonth","startDate","lastDayOfThisMonth","getDate","lastDayOfMonth","daysOfWeek","days","day","formattedDate","i","cloneDay","isSameMonth","isSameDay","onDateClick","getDay","addDays","Cells","alignCenter","Calendar","List","ul","ListItem","ListTodo","todos","setTodos","setDone","unsubscribe","where","onSnapshot","snapshot","docs","map","description","datatime","unsubscribeFirestore","handleFilter","querySnapshot","forEach","ref","dataSource","renderItem","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","onChangeDone","Meta","undefined","redirectClick","DeleteOutlined","SignOut","ProfilePage","signOut","PlusCircleOutlined","ContainerRoot","HeaderRoot","ButtonsRoot","Main","CheckboxTrue","CheckboxFalse","Buttons","Icon","EditTodo","setTimeout","goBack","EditOutlined","AddTodo","setTitle","setDescription","target","TextArea","CloseCircleOutlined","CheckCircleOutlined","add","userId","addTodoInList","AddTodoPage","EditTodoPage","defaultValue","rows","editTodoInList","Todo","Routes","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eba978cb.chunk.js","sourcesContent":["import {\r\n  REACT_APP_API_KEY,\r\n  REACT_APP_APP_ID,\r\n  REACT_APP_AUTH_DOMAIN,\r\n  REACT_APP_DATABASE_URL,\r\n  REACT_APP_MESSAGING_SENDER_ID,\r\n  REACT_APP_PROJECT_ID,\r\n  REACT_APP_STORAGE_BUCKET,\r\n} from './base';\r\n\r\nconst config = {\r\n  apiKey: REACT_APP_API_KEY,\r\n  authDomain: REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: REACT_APP_DATABASE_URL,\r\n  projectId: REACT_APP_PROJECT_ID,\r\n  storageBucket: REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: REACT_APP_APP_ID,\r\n};\r\nexport default config;\r\n","export const REACT_APP_API_KEY = process.env.REACT_APP_API_KEY;\r\nexport const REACT_APP_AUTH_DOMAIN = process.env.REACT_APP_AUTH_DOMAIN;\r\nexport const REACT_APP_DATABASE_URL = process.env.REACT_APP_DATABASE_URL;\r\nexport const REACT_APP_PROJECT_ID = process.env.REACT_APP_PROJECT_ID;\r\nexport const REACT_APP_STORAGE_BUCKET = process.env.REACT_APP_STORAGE_BUCKET;\r\nexport const REACT_APP_MESSAGING_SENDER_ID =\r\n  process.env.REACT_APP_MESSAGING_SENDER_ID;\r\nexport const REACT_APP_APP_ID = process.env.REACT_APP_APP_ID;\r\n","/* eslint-disable no-unused-vars */\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport config from './firebaseConfig';\r\nimport toast from 'react-hot-toast';\r\n// Check if we have already initialized an app\r\nconst firebaseApp = !firebase.apps.length\r\n  ? firebase.initializeApp(config)\r\n  : firebase.app();\r\n\r\nexport const auth = firebaseApp.auth();\r\nexport const firestore = firebaseApp.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const signInWithGoogle = () => {\r\n  auth.signInWithPopup(provider);\r\n};\r\n\r\nexport const generateUserDocument = async (user, additionalData) => {\r\n  if (!user) return;\r\n\r\n  const userRef = firestore.doc(`users/${user.uid}`);\r\n  const snapshot = await userRef.get();\r\n\r\n  if (!snapshot.exists) {\r\n    const { email, displayName, photoURL } = user;\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        photoURL,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating user document', error);\r\n    }\r\n  }\r\n  return getUserDocument(user.uid);\r\n};\r\n\r\nconst getUserDocument = async uid => {\r\n  if (!uid) return null;\r\n  try {\r\n    const userDocument = await firestore.doc(`users/${uid}`).get();\r\n\r\n    return {\r\n      uid,\r\n      ...userDocument.data(),\r\n    };\r\n  } catch (error) {\r\n    console.error('Error fetching user', error);\r\n  }\r\n};\r\n\r\nexport const resetPassword = (event, email) => {\r\n  event.preventDefault();\r\n  auth\r\n    .sendPasswordResetEmail(email)\r\n    .then(toast.success('Please check your email'))\r\n    .catch(() => {\r\n      toast.error('Please enter a valid email');\r\n    });\r\n};\r\n\r\nexport const signInEmailAndPassword = async (event, email, password) => {\r\n  event.preventDefault();\r\n  try {\r\n    await auth.signInWithEmailAndPassword(email, password);\r\n    toast.success('Good!');\r\n  } catch (error) {\r\n    toast.error(error.message);\r\n  }\r\n};\r\n\r\nexport const signUpEmailAndPassword = async (event, email, password) => {\r\n  event.preventDefault();\r\n  try {\r\n    await auth.createUserWithEmailAndPassword(email, password);\r\n    toast.success('Create account');\r\n  } catch (error) {\r\n    toast.error(error.message);\r\n  }\r\n};\r\n\r\nexport const addTodoInList = (event, user, title, description, day) => {\r\n  event.preventDefault();\r\n  firestore.collection('todos').add({\r\n    userId: user.uid,\r\n    title: title,\r\n    description: description,\r\n    day: day,\r\n    done: false,\r\n  });\r\n};\r\n\r\nexport const editTodoInList = (event, todo, setTodo, title, description) => {\r\n  event.preventDefault();\r\n  firestore.collection('todos').doc(todo.id).update({\r\n    title: title,\r\n    description: description,\r\n  });\r\n  firestore\r\n    .collection('todos')\r\n    .doc(todo.id)\r\n    .get()\r\n    .then(doc => {\r\n      if (doc.exists)\r\n        setTodo({\r\n          id: doc.id,\r\n          title: doc.data().title,\r\n          description: doc.data().description,\r\n          done: doc.data().done,\r\n        });\r\n    })\r\n    .then(() => {\r\n      toast.success('Update!');\r\n    });\r\n};\r\n\r\nexport const deleteTodoInList = id => {\r\n  firestore\r\n    .collection('todos')\r\n    .doc(id)\r\n    .delete()\r\n    .then(() => {\r\n      toast.success('Deleted!');\r\n    });\r\n};\r\n\r\nexport const updateDone = (todo, isDone) => {\r\n  firestore.collection('todos').doc(todo.id).update({\r\n    done: isDone,\r\n  });\r\n};\r\n\r\nexport const filterCompleteTodo = () => {\r\n  firestore\r\n    .collection('todos')\r\n    .where('done', '==', true)\r\n    .get()\r\n    .then(function (querySnapshot) {\r\n      querySnapshot.forEach(function (doc) {\r\n        doc.ref\r\n          .delete()\r\n          .then(() => {\r\n            toast.success('Document successfully deleted!');\r\n          })\r\n          .catch(error => {\r\n            toast.error('Error removing document: ' + error);\r\n          });\r\n      });\r\n    });\r\n};\r\n\r\nexport const unsubscribeFirestore = (user, day, setTodos) => {\r\n  firestore\r\n    .collection('todos')\r\n    .where('userId', '==', user.uid)\r\n    .where('day', '==', day)\r\n    .onSnapshot(snapshot => {\r\n      setTodos(\r\n        snapshot.docs.map(doc => {\r\n          return {\r\n            id: doc.id,\r\n            date: day,\r\n            title: doc.data().title,\r\n            description: doc.data().description,\r\n            done: doc.data().done,\r\n            datatime: new Date(),\r\n          };\r\n        }),\r\n      );\r\n    });\r\n};\r\n","import React, { createContext, useEffect, useState } from 'react';\r\nimport { auth, generateUserDocument } from '@firebaseConfig';\r\n\r\nexport const UserContext = createContext({ user: null });\r\n\r\nconst UserProvider = props => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(async userAuth => {\r\n      const user = await generateUserDocument(userAuth);\r\n      setUser(user);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={user}>{props.children}</UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserProvider;\r\n","import { format } from 'date-fns';\r\nimport React, { createContext, useState } from 'react';\r\n\r\nexport const TodoContext = createContext({ todo: null });\r\nexport const DateContext = createContext();\r\n\r\nconst today = format(new Date(), 'dd MM yyyy');\r\nconst DateProvider = props => {\r\n  const [date, setDate] = useState(today);\r\n  const [todo, setTodo] = useState(null);\r\n  return (\r\n    <DateContext.Provider value={[date, setDate]}>\r\n      <TodoContext.Provider value={[todo, setTodo]}>\r\n        {props.children}\r\n      </TodoContext.Provider>\r\n    </DateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DateProvider;\r\n","import styled from 'styled-components';\r\n\r\nconst Style = {\r\n  Container: styled.div`\r\n    // max-width: 750px;\r\n    // margin: 0 auto;\r\n    // margin-top: 50px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    height: 500px;\r\n    border-radius: 3px;\r\n    padding-top: 20px;\r\n  `,\r\n  Button: styled.div`\r\n    width: 250px;\r\n    & > .ResetPas {\r\n      width: 200px;\r\n      background: rgb(151, 11, 221);\r\n      background: linear-gradient(\r\n        90deg,\r\n        rgba(151, 11, 221, 1) 0%,\r\n        rgba(128, 11, 93, 1) 35%,\r\n        rgba(237, 120, 10, 1) 100%\r\n      );\r\n      border: none;\r\n      font-size: 18px;\r\n      height: 30px;\r\n      color: white;\r\n      transition: 0.4s linear;\r\n    }\r\n    & > .ResetPas:hover {\r\n      background-color: #e1dfdf;\r\n      color: black;\r\n      border: none;\r\n    }\r\n  `,\r\n  Form: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    border: 1px solid black;\r\n    padding: 80px;\r\n    box-shadow: inset 0 0 0 1px #337ab7;\r\n    @media (max-width: 768px) {\r\n      padding: 0;\r\n      box-shadow: none;\r\n      border: none;\r\n    }\r\n  `,\r\n  Title: styled.div`\r\n    font-size: 30px;\r\n    font-style: italic;\r\n    padding-bottom: 30px;\r\n  `,\r\n  Links: styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    text-align: center;\r\n    justify-content: space-between;\r\n    margin: 20px 0;\r\n    & > Link {\r\n      color: black;\r\n    }\r\n  `,\r\n  Accept: styled.span`\r\n    color: green;\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Input } from 'antd';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport Style from './StyledPasswordReset';\r\nimport { resetPassword } from '@firebaseConfig';\r\nconst PasswordReset = () => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === 'userEmail') {\r\n      setEmail(value);\r\n    }\r\n  };\r\n\r\n  const sendResetEmail = event => {\r\n    resetPassword(event, email);\r\n    setEmail('');\r\n  };\r\n  return (\r\n    <Style.Container>\r\n      <Toaster />\r\n      <Style.Form>\r\n        <Form>\r\n          <Style.Title>Reset your Password</Style.Title>\r\n          <Form.Item>\r\n            <Input\r\n              type=\"email\"\r\n              name=\"userEmail\"\r\n              id=\"userEmail\"\r\n              value={email}\r\n              placeholder=\"Input your email\"\r\n              onChange={onChangeHandler}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Style.Button>\r\n              <button className=\"ResetPas\" onClick={sendResetEmail}>\r\n                Send me a reset link\r\n              </button>\r\n            </Style.Button>\r\n          </Form.Item>\r\n          <Link to=\"/signIn\">&larr; back to sign in page</Link>\r\n        </Form>\r\n      </Style.Form>\r\n    </Style.Container>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n","import styled from 'styled-components';\r\n\r\nconst Styled = {\r\n  Container: styled.div`\r\n    // max-width: 750px;\r\n    // margin: 0 auto;\r\n    // margin-top: 50px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    height: 500px;\r\n    border-radius: 3px;\r\n    padding-top: 20px;\r\n  `,\r\n  Button: styled.div`\r\n    width: 200px;\r\n    & > .SignIn {\r\n      width: 200px;\r\n      background: rgb(151, 11, 221);\r\n      background: linear-gradient(\r\n        90deg,\r\n        rgba(151, 11, 221, 1) 0%,\r\n        rgba(128, 11, 93, 1) 35%,\r\n        rgba(237, 120, 10, 1) 100%\r\n      );\r\n      border: none;\r\n      font-size: 18px;\r\n      height: 30px;\r\n      color: white;\r\n      transition: 0.4s linear;\r\n    }\r\n    & > .SignIn:hover {\r\n      background-color: #e1dfdf;\r\n      color: black;\r\n      border: none;\r\n    }\r\n    & > .Google {\r\n      width: 200px;\r\n      background-color: white;\r\n      border: none;\r\n      font-size: 15px;\r\n      height: 40px;\r\n      transition: 0.4s linear;\r\n    }\r\n    & > .Google:hover {\r\n      box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\r\n        0 10px 10px rgba(0, 0, 0, 0.22);\r\n    }\r\n    & > .Google > span {\r\n      margin-left: 10px;\r\n    }\r\n  `,\r\n  Form: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    border: 1px solid black;\r\n    padding: 80px;\r\n    box-shadow: inset 0 0 0 1px #337ab7;\r\n    @media (max-width: 768px) {\r\n      box-shadow: none;\r\n      border: none;\r\n    }\r\n  `,\r\n  Title: styled.span`\r\n    font-size: 30px;\r\n    font-style: italic;\r\n  `,\r\n  Links: styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    text-align: center;\r\n    justify-content: space-between;\r\n    margin: 20px 0;\r\n    & > Link {\r\n      color: black;\r\n    }\r\n    & > Link > .SignUp {\r\n      border: 1px solid black;\r\n    }\r\n  `,\r\n  Error: styled.span`\r\n    color: red;\r\n  `,\r\n};\r\n\r\nexport default Styled;\r\n","/* eslint-disable react/no-unescaped-entities */\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { signInWithGoogle } from '@firebaseConfig/index';\r\nimport { Form, Input, Divider, Tooltip } from 'antd';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport {\r\n  UserOutlined,\r\n  GoogleOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport Style from './StyledSignIn';\r\nimport { signInEmailAndPassword } from '@firebaseConfig';\r\n\r\nconst SignIn = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const signInWithEmailAndPasswordHandler = (event, email, password) => {\r\n    signInEmailAndPassword(event, email, password);\r\n  };\r\n\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === 'userEmail') {\r\n      setEmail(value);\r\n    } else if (name === 'userPassword') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const logginGoogle = () => {\r\n    signInWithGoogle();\r\n  };\r\n\r\n  const logginEmailAndPassword = event => {\r\n    signInWithEmailAndPasswordHandler(event, email, password);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Style.Container>\r\n        <Toaster />\r\n        <Style.Form>\r\n          <Form>\r\n            <Style.Title>Clever Todo List</Style.Title>\r\n            <Divider />\r\n            <p>\r\n              Welcome to Clever Todo list.\r\n              <br />\r\n              Please login to your account\r\n            </p>\r\n            <Divider />\r\n            <Form.Item>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"userEmail\"\r\n                value={email}\r\n                placeholder=\"Your email\"\r\n                id=\"userEmail\"\r\n                onChange={onChangeHandler}\r\n                prefix={<UserOutlined />}\r\n                suffix={\r\n                  <Tooltip title=\"Extra information\">\r\n                    <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                  </Tooltip>\r\n                }\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Input.Password\r\n                type=\"password\"\r\n                name=\"userPassword\"\r\n                value={password}\r\n                placeholder=\"Your Password\"\r\n                id=\"userPassword\"\r\n                onChange={onChangeHandler}\r\n                suffix={\r\n                  <Tooltip title=\"Extra information\">\r\n                    <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                  </Tooltip>\r\n                }\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Style.Button>\r\n                <button className=\"SignIn\" onClick={logginEmailAndPassword}>\r\n                  Login\r\n                </button>\r\n              </Style.Button>\r\n              <Style.Links>\r\n                <Link to=\"/signUp\">\r\n                  <span className=\"SignUp\">Sign up </span>\r\n                </Link>{' '}\r\n                <br />\r\n                <Link to=\"/passwordReset\">\r\n                  <span>Forgot Password?</span>\r\n                </Link>\r\n              </Style.Links>\r\n            </Form.Item>\r\n            <Divider plain>Or Login Using</Divider>\r\n            <Form.Item>\r\n              <Style.Button>\r\n                <button className=\"Google\" onClick={logginGoogle}>\r\n                  <GoogleOutlined />\r\n                  <span>Google</span>\r\n                </button>\r\n              </Style.Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Style.Form>\r\n      </Style.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import styled from 'styled-components';\r\n\r\nconst Style = {\r\n  Container: styled.div`\r\n    // max-width: 750px;\r\n    // margin: 0 auto;\r\n    // margin-top: 50px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    height: 500px;\r\n    border-radius: 3px;\r\n    padding-top: 20px;\r\n  `,\r\n  Button: styled.div`\r\n    width: 200px;\r\n    & > .SignUp {\r\n      width: 200px;\r\n      background: rgb(151, 11, 221);\r\n      background: linear-gradient(\r\n        90deg,\r\n        rgba(151, 11, 221, 1) 0%,\r\n        rgba(128, 11, 93, 1) 35%,\r\n        rgba(237, 120, 10, 1) 100%\r\n      );\r\n      border: none;\r\n      font-size: 18px;\r\n      height: 30px;\r\n      color: white;\r\n      transition: 0.4s linear;\r\n    }\r\n    & > .SignUp:hover {\r\n      background-color: #e1dfdf;\r\n      color: black;\r\n      border: none;\r\n    }\r\n    & > .Google {\r\n      width: 200px;\r\n      background-color: white;\r\n      border: none;\r\n      font-size: 15px;\r\n      height: 40px;\r\n      transition: 0.4s linear;\r\n    }\r\n    & > .Google:hover {\r\n      box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\r\n        0 10px 10px rgba(0, 0, 0, 0.22);\r\n    }\r\n    & > .Google > span {\r\n      margin-left: 10px;\r\n    }\r\n  `,\r\n  Form: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    border: 1px solid black;\r\n    padding: 80px;\r\n    box-shadow: inset 0 0 0 1px #337ab7;\r\n    @media (max-width: 768px) {\r\n      box-shadow: none;\r\n      border: none;\r\n    }\r\n  `,\r\n  Title: styled.div`\r\n    font-size: 30px;\r\n    font-style: italic;\r\n    padding-bottom: 30px;\r\n  `,\r\n  Links: styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    text-align: center;\r\n    justify-content: space-between;\r\n    margin: 20px 0;\r\n    & > Link {\r\n      color: black;\r\n    }\r\n  `,\r\n  Error: styled.span`\r\n    color: red;\r\n  `,\r\n  Toast: styled.div`\r\n    color: red;\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport { signInWithGoogle } from '@firebaseConfig/index';\r\nimport { Form, Input, Divider, Tooltip } from 'antd';\r\nimport { UserOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport Style from './StyledSignUp';\r\nimport { signUpEmailAndPassword } from '@firebaseConfig';\r\n\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [displayName, setDisplayName] = useState('');\r\n  const history = useHistory();\r\n  const createUserWithEmailAndPasswordHandler = (event, email, password) => {\r\n    signUpEmailAndPassword(event, email, password);\r\n    setEmail('');\r\n    setPassword('');\r\n    setDisplayName('');\r\n  };\r\n\r\n  const onChangeHandlerEmail = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === 'userEmail') {\r\n      setEmail(value);\r\n    }\r\n  };\r\n\r\n  const onChangeHandlerPassword = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === 'userPassword') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onChangeHandlerName = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === 'displayName') {\r\n      setDisplayName(value);\r\n    }\r\n  };\r\n\r\n  const createUser = event => {\r\n    createUserWithEmailAndPasswordHandler(event, email, password);\r\n    history.push('/calendar');\r\n  };\r\n\r\n  const logginGoogle = () => {\r\n    try {\r\n      signInWithGoogle();\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Style.Container>\r\n      <Toaster />\r\n      <Style.Form>\r\n        <Form>\r\n          <Style.Title>Sign Up</Style.Title>\r\n          <Form.Item>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"displayName\"\r\n              value={displayName}\r\n              placeholder=\"E.g: Faruq\"\r\n              id=\"displayName\"\r\n              onChange={onChangeHandlerName}\r\n              prefix={<UserOutlined />}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Input\r\n              type=\"email\"\r\n              name=\"userEmail\"\r\n              value={email}\r\n              placeholder=\"E.g: faruq123@gmail.com\"\r\n              id=\"userEmail\"\r\n              onChange={onChangeHandlerEmail}\r\n              prefix={<UserOutlined />}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Input.Password\r\n              type=\"password\"\r\n              name=\"userPassword\"\r\n              value={password}\r\n              placeholder=\"Your Password\"\r\n              id=\"userPassword\"\r\n              onChange={onChangeHandlerPassword}\r\n              suffix={\r\n                <Tooltip title=\"Extra information\">\r\n                  <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                </Tooltip>\r\n              }\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Style.Button>\r\n              <button className=\"SignUp\" onClick={createUser}>\r\n                Sign up\r\n              </button>\r\n            </Style.Button>\r\n            <Style.Links>\r\n              <p> Already have an account?</p>\r\n              <Link to=\"/signIn\">Sign in</Link>\r\n            </Style.Links>\r\n          </Form.Item>\r\n          <Divider plain>Or SignUp Using</Divider>\r\n          <Form.Item>\r\n            <Style.Button onClick={logginGoogle}>\r\n              <button onClick={logginGoogle}>Sign In with Google</button>\r\n            </Style.Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Style.Form>\r\n    </Style.Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport PasswordReset from './PasswordReset/PasswordReset';\r\nimport SignIn from './SignIn/SignIn';\r\nimport SignUp from './SignUp/SignUp';\r\n\r\nconst Authentication = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/signIn\" component={SignIn} />\r\n      <Route path=\"/signUp\" component={SignUp} />\r\n      <Route path=\"/passwordReset\" component={PasswordReset} />\r\n      <Redirect from=\"/\" to=\"/signIn\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Authentication;\r\n","import styled from 'styled-components';\r\n\r\nconst Style = {\r\n  Header: styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    padding: 10px 0;\r\n    border-bottom: 1px solid lightgray;\r\n    background: white;\r\n    margin: 0 auto;\r\n  `,\r\n  HeaderCell: styled.span`\r\n    margin: 0 auto;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    color: #b629fd;\r\n  `,\r\n  HeaderCellAnlge: styled.span`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    width: 30px;\r\n    background: #b629fd;\r\n    border-radius: 50%;\r\n    color: white;\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","import React from 'react';\r\nimport { addMonths, format, subMonths } from 'date-fns';\r\nimport { RightOutlined, LeftOutlined } from '@ant-design/icons';\r\nimport Style from './StyledMonths';\r\n\r\nconst Months = ({ currentDate, setCurrentDate }) => {\r\n  const dateFormat = 'MMMM yyyy';\r\n\r\n  const nextMonth = () => {\r\n    setCurrentDate(addMonths(currentDate, 1));\r\n  };\r\n\r\n  const prevMonth = () => {\r\n    setCurrentDate(subMonths(currentDate, 1));\r\n  };\r\n\r\n  return (\r\n    <Style.Header>\r\n      <Style.HeaderCellAnlge onClick={prevMonth}>\r\n        <LeftOutlined />\r\n      </Style.HeaderCellAnlge>\r\n      <Style.HeaderCell>\r\n        <span>{format(currentDate, dateFormat)}</span>\r\n      </Style.HeaderCell>\r\n      <Style.HeaderCellAnlge onClick={nextMonth}>\r\n        <RightOutlined />\r\n      </Style.HeaderCellAnlge>\r\n    </Style.Header>\r\n  );\r\n};\r\n\r\nexport default Months;\r\n","import styled from 'styled-components';\r\n\r\nconst Style = {\r\n  Days: styled.span`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 10px 10px;\r\n    margin-right: 10px;\r\n    font-size: 20px;\r\n    width: 36px;\r\n    &:hover {\r\n      border-radius: 30%;\r\n      background-color: #04083d;\r\n      color: white;\r\n    }\r\n    &:active {\r\n      border: 1px solid orange;\r\n      border-radius: 30%;\r\n      background-color: white;\r\n      color: orange;\r\n    }\r\n  `,\r\n  DaysOfWeek: styled.span`\r\n    font-size: 15px;\r\n    color: ligthgray;\r\n  `,\r\n  Scroll: styled.div`\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    padding: 10px 10px;\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\r\nimport Style from './StyledTheDate';\r\n\r\nimport {\r\n  addDays,\r\n  format,\r\n  getDate,\r\n  isSameDay,\r\n  isSameMonth,\r\n  lastDayOfMonth,\r\n  startOfMonth,\r\n} from 'date-fns';\r\nimport { DateContext } from '../../../../providers/DateProvider';\r\n\r\nconst TheDate = props => {\r\n  //Scroll to this day\r\n  const scrollToDate = () => {\r\n    let selectedDay = document.querySelector('.selected');\r\n    selectedDay.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return scrollToDate();\r\n  }, []);\r\n\r\n  const { currentDate } = props;\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [, setDate] = useContext(DateContext);\r\n\r\n  const onDateClick = day => {\r\n    setSelectedDate(day);\r\n    setDate(format(day, 'dd MM yyyy'));\r\n  };\r\n\r\n  const Cells = () => {\r\n    const monthStart = startOfMonth(currentDate);\r\n    const startDate = startOfMonth(monthStart);\r\n\r\n    const lastDayOfThisMonth = getDate(lastDayOfMonth(currentDate));\r\n    const daysOfWeek = ['Sat', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sun'];\r\n    const dateFormat = 'd';\r\n    let days = [];\r\n    let day = startDate;\r\n    let formattedDate = '';\r\n\r\n    for (let i = 0; i < lastDayOfThisMonth; i++) {\r\n      formattedDate = format(day, dateFormat);\r\n      const cloneDay = day;\r\n      days.push(\r\n        <Style.Days\r\n          className={`${\r\n            !isSameMonth(day, monthStart)\r\n              ? 'disabled'\r\n              : isSameDay(day, selectedDate)\r\n              ? 'selected'\r\n              : ''\r\n          }`}\r\n          key={day}\r\n          onClick={() => onDateClick(cloneDay)}>\r\n          <Style.DaysOfWeek>{daysOfWeek[day.getDay()]}</Style.DaysOfWeek>\r\n          <span>{formattedDate}</span>\r\n        </Style.Days>,\r\n      );\r\n      day = addDays(day, 1);\r\n    }\r\n    return days;\r\n  };\r\n\r\n  return (\r\n    <Style.Scroll>\r\n      <ScrollMenu data={Cells()} alignCenter={false} />\r\n    </Style.Scroll>\r\n  );\r\n};\r\n\r\nexport default TheDate;\r\n","import styled from 'styled-components';\r\n\r\nconst Style = {\r\n  Calendar: styled.div`\r\n    display: block;\r\n    position: relative;\r\n    max-width: 750px;\r\n    margin: 0 auto;\r\n    border-radius: 20px;\r\n    height: auto;\r\n    margin: 30px auto;\r\n    @media (max-width: 768px) {\r\n      max-width: 400px;\r\n      margin: 0 auto;\r\n    }\r\n    @media (max-width: 575px) {\r\n      max-width: 400px;\r\n      max-height: 200px;\r\n      margin: 0 auto;\r\n      margin-top: 20px;\r\n      & > div {\r\n        font-size: 10px;\r\n      }\r\n    }\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","import React, { useState } from 'react';\r\nimport Months from './Months/Months.jsx';\r\nimport TheDate from './TheDate/TheDate';\r\nimport Style from './StyledCalendar';\r\n\r\nconst Calendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n  return (\r\n    <Style.Calendar>\r\n      <Months currentDate={currentDate} setCurrentDate={setCurrentDate} />\r\n      <TheDate currentDate={currentDate} />\r\n    </Style.Calendar>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import styled from 'styled-components';\r\n\r\nconst Style = {\r\n  Container: styled.div`\r\n    width: 600px;\r\n    max-height: 500px;\r\n    margin: 20px auto;\r\n    // background-color: rgb(243, 243, 243);\r\n    @media (max-width: 767px) {\r\n      overflow: scroll;\r\n      max-width: 400px;\r\n      max-height: 300px;\r\n      margin-top: 20px;\r\n      margin-bottom: 40px;\r\n    }\r\n    @media (max-width: 575px) {\r\n      overflow: scroll;\r\n      max-width: 300px;\r\n      max-height: 200px;\r\n      margin: 30px auto;\r\n    }\r\n  `,\r\n  List: styled.ul`\r\n    list-style-type: none;\r\n    padding: 0;\r\n    margin: 0;\r\n  `,\r\n  ListItem: styled.div`\r\n    margin: 0 auto;\r\n    border: 1px solid lightgray;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: space-between;\r\n    width: 200px;\r\n    text-align: center;\r\n    background-color: white;\r\n    @media (max-width: 575px) {\r\n      max-width: 100px;\r\n      margin: 0 auto;\r\n    }\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { DateContext, TodoContext } from '@providers/DateProvider';\r\nimport { List, Switch } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserContext } from '@providers/UserProvider';\r\nimport {\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  DeleteOutlined,\r\n} from '@ant-design/icons';\r\nimport Style from './StyledListTodo';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport {\r\n  updateDone,\r\n  deleteTodoInList,\r\n  filterCompleteTodo,\r\n  unsubscribeFirestore,\r\n} from '@firebaseConfig';\r\n\r\nconst ListTodo = () => {\r\n  const [, setTodo] = useContext(TodoContext);\r\n  const [day] = useContext(DateContext);\r\n  const history = useHistory();\r\n  const [todos, setTodos] = useState([]);\r\n  const [, setDone] = useState(todos.done);\r\n  const user = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    let unsubscribe;\r\n    if (day) {\r\n      unsubscribe = unsubscribeFirestore(user, day, setTodos);\r\n    }\r\n\r\n    return () => {\r\n      if (typeof unsubscribe === 'function') {\r\n        unsubscribe();\r\n      }\r\n    };\r\n  }, [day]);\r\n\r\n  const redirectClick = todo => {\r\n    setTodo(todo);\r\n    history.push('/todo');\r\n  };\r\n\r\n  const onChangeDone = todo => {\r\n    let done = !todo.done;\r\n    setDone(!done);\r\n    updateDone(todo, done);\r\n  };\r\n  const deleteTodo = id => {\r\n    deleteTodoInList(id);\r\n  };\r\n\r\n  const handleFilter = () => {\r\n    filterCompleteTodo();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <Style.Container>\r\n        <Style.List>\r\n          <List\r\n            dataSource={todos}\r\n            renderItem={todo => (\r\n              <>\r\n                <List.Item key={todo.id}>\r\n                  <Switch\r\n                    checkedChildren={<CheckOutlined />}\r\n                    unCheckedChildren={<CloseOutlined />}\r\n                    defaultChecked={todo.done}\r\n                    className={todo.done == true ? 'check' : 'uncheck'}\r\n                    onClick={() => {\r\n                      onChangeDone(todo);\r\n                    }}\r\n                  />\r\n                  <Style.ListItem>\r\n                    <List.Item.Meta\r\n                      className={todo.done ? 'todo-completed' : undefined}\r\n                      title={todo.title}\r\n                      onClick={() => {\r\n                        redirectClick(todo);\r\n                      }}\r\n                    />\r\n                  </Style.ListItem>\r\n                  <DeleteOutlined onClick={() => deleteTodo(todo.id)} />\r\n                </List.Item>\r\n              </>\r\n            )}\r\n          />\r\n        </Style.List>\r\n        <button\r\n          onClick={() => {\r\n            handleFilter(todos);\r\n          }}>\r\n          Clear All Completed\r\n        </button>\r\n      </Style.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListTodo;\r\n","import styled from 'styled-components';\r\n\r\nconst Style = {\r\n  Container: styled.div`\r\n    max-width: 700px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    @media (max-width: 762px) {\r\n      max-width: 400px;\r\n      max-height: 700px;\r\n      margin: 0 auto;\r\n    }\r\n    @media (max-width: 575px) {\r\n      max-width: 400px;\r\n      max-height: 400px;\r\n      margin: 0 auto;\r\n    }\r\n  `,\r\n  Button: styled.div`\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    border: none;\r\n    & > button {\r\n      background-color: #b629fd;\r\n      color: white;\r\n      border: none;\r\n    }\r\n  `,\r\n  SignOut: styled.div`\r\n    color: #000080;\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n    font-size: 20px;\r\n    & > button {\r\n      background-color: black;\r\n      color: white;\r\n      border: none;\r\n    }\r\n    @media (max-width: 575px) {\r\n      font-size: 13px;\r\n    }\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport Calendar from '../Calendar/Calendar';\r\nimport { auth } from '@firebaseConfig/index';\r\nimport ListTodo from '../ListTodo/ListTodo';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport Style from './StyledProfilePage';\r\n\r\nconst ProfilePage = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <Style.Container>\r\n        <Style.SignOut>\r\n          <button\r\n            onClick={() => {\r\n              auth.signOut();\r\n            }}>\r\n            Sign out\r\n          </button>\r\n        </Style.SignOut>\r\n        <Calendar />\r\n        {/* <AddTodo /> */}\r\n        <ListTodo />\r\n        <Style.Button>\r\n          <Button\r\n            onClick={() => {\r\n              history.push('/addtodo');\r\n            }}>\r\n            <PlusCircleOutlined />\r\n            Add a New Task\r\n          </Button>\r\n        </Style.Button>\r\n      </Style.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import styled from 'styled-components';\r\n\r\nconst Style = {\r\n  ContainerRoot: styled.div`\r\n    width: 400px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    text-align: center;\r\n    @media (max-width: 760px) {\r\n      width: 300px;\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      margin-right: -50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  `,\r\n  HeaderRoot: styled.div`\r\n    width: 300px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    & > h1 {\r\n      margin: 0 auto;\r\n    }\r\n    & > button {\r\n      padding-right: 20px;\r\n      margin-left: 10px;\r\n      width: 20px;\r\n      border: none;\r\n      background-color: #f9f6f6;\r\n      border-radius: 40px 40px 40px 40px;\r\n    }\r\n  `,\r\n  ButtonsRoot: styled.div`\r\n    width: 300px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    & > button {\r\n      width: 50px;\r\n      background-color: white;\r\n      border: 1px solid gray;\r\n      border-radius: 40px 40px 40px 40px;\r\n    }\r\n  `,\r\n  Main: styled.div`\r\n    & > p {\r\n      color: #5c5c5c;\r\n    }\r\n  `,\r\n  CheckboxTrue: styled.div`\r\n    border-radius: 40px 40px 40px 40px;\r\n    width: 120px;\r\n    background-color: #73fa85;\r\n  `,\r\n  CheckboxFalse: styled.div`\r\n    border-radius: 40px 40px 40px 40px;\r\n    width: 120px;\r\n    background-color: #f95056;\r\n  `,\r\n  Container: styled.div`\r\n    max-width: 400px;\r\n    max-height: 500px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space around;\r\n    @media (max-width: 768px) {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      margin-right: -50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  `,\r\n  Header: styled.div`\r\n    width: 300px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    & > h1 {\r\n      margin: 0 auto;\r\n    }\r\n    & > button {\r\n      padding-right: 20px;\r\n      margin-left: 10px;\r\n      width: 20px;\r\n      border: none;\r\n      background-color: #f9f6f6;\r\n      border-radius: 40px 40px 40px 40px;\r\n    }\r\n  `,\r\n  Buttons: styled.div`\r\n    width: 300px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    & > button {\r\n      width: 50px;\r\n      background-color: white;\r\n      border: 1px solid gray;\r\n      border-radius: 40px 40px 40px 40px;\r\n    }\r\n  `,\r\n  Icon: styled.span`\r\n  font-size: 30px;S\r\n`,\r\n};\r\n\r\nexport default Style;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { TodoContext } from '@providers/DateProvider';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Checkbox } from 'antd';\r\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport Style from './StyledEditTodo';\r\nimport { deleteTodoInList, updateDone } from '@firebaseConfig';\r\n\r\nconst EditTodo = () => {\r\n  const [todo] = useContext(TodoContext);\r\n  const [isDone, setDone] = useState(todo.done);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    updateDone(todo, isDone);\r\n  });\r\n\r\n  const deleteTodo = id => {\r\n    deleteTodoInList(id);\r\n    setTimeout(() => {\r\n      history.goBack();\r\n    }, 2000);\r\n  };\r\n  const onChange = () => {\r\n    setDone(!isDone);\r\n  };\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <Style.ContainerRoot>\r\n        <Style.HeaderRoot>\r\n          <button\r\n            onClick={() => {\r\n              history.push('/');\r\n            }}>\r\n            {'<'}\r\n          </button>\r\n          <h1>Todo</h1>\r\n        </Style.HeaderRoot>\r\n        <Style.Main>\r\n          <h2> {todo.title}</h2>\r\n          <p>{todo.description}</p>\r\n        </Style.Main>\r\n        <Style.ButtonsRoot>\r\n          <button onClick={() => deleteTodo(todo.id)}>\r\n            <DeleteOutlined />\r\n          </button>\r\n          <button onClick={() => history.push('/edittodo')}>\r\n            <EditOutlined />\r\n          </button>\r\n          <Style.CheckboxTrue>\r\n            <Checkbox defaultChecked={todo.done} onChange={onChange}>\r\n              Complete\r\n            </Checkbox>\r\n          </Style.CheckboxTrue>\r\n        </Style.ButtonsRoot>\r\n      </Style.ContainerRoot>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTodo;\r\n","import styled from 'styled-components';\r\n\r\nconst Style = {\r\n  ContainerRoot: styled.div`\r\n    width: 200px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    text-align: center;\r\n  `,\r\n  Container: styled.div`\r\n    width: 300px;\r\n    margin: 0 auto;\r\n    @media (max-width: 768px) {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      margin-right: -50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  `,\r\n  Header: styled.div`\r\n    width: 300px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    & > h1 {\r\n      margin: 0 auto;\r\n    }\r\n    & > button {\r\n      padding-right: 20px;\r\n      margin-left: 10px;\r\n      width: 20px;\r\n      border: none;\r\n      background-color: #f9f6f6;\r\n      border-radius: 40px 40px 40px 40px;\r\n    }\r\n  `,\r\n  Buttons: styled.div`\r\n    width: 300px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    & > button {\r\n      width: 50px;\r\n      background-color: white;\r\n      border: 1px solid gray;\r\n      border-radius: 40px 40px 40px 40px;\r\n    }\r\n  `,\r\n  Icon: styled.span`\r\n  font-size: 30px;S\r\n`,\r\n};\r\n\r\nexport default Style;\r\n","import React, { useState, useContext } from 'react';\r\nimport { Form, Input } from 'antd';\r\nimport { DateContext } from '@providers/DateProvider';\r\nimport { UserContext } from '@providers/UserProvider';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport Style from './StyledAddTodo';\r\nimport { addTodoInList } from '@firebaseConfig';\r\n\r\nconst AddTodo = () => {\r\n  const [day] = useContext(DateContext);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const user = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const addTodo = event => {\r\n    addTodoInList(event, user, title, description, day);\r\n    setTitle('');\r\n    setDescription('');\r\n    toast.success('Add in your list');\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  const changeTitle = event => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const changeDescription = event => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const goBack = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <Style.Container>\r\n        <Style.Header>\r\n          <span onClick={goBack}>{'<'}</span>\r\n          <h1>Add Todo</h1>\r\n        </Style.Header>\r\n        <Form>\r\n          <Form.Item>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"todoTitle\"\r\n              name=\"todo\"\r\n              value={title}\r\n              placeholder=\"Title\"\r\n              onChange={changeTitle}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Input.TextArea\r\n              type=\"text\"\r\n              id=\"todoDescription\"\r\n              name=\"todo\"\r\n              value={description}\r\n              placeholder=\"Description\"\r\n              onChange={changeDescription}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Style.Buttons>\r\n              <Style.Icon>\r\n                <CloseCircleOutlined onClick={cancelEdit} />\r\n              </Style.Icon>\r\n              <Style.Icon>\r\n                <CheckCircleOutlined onClick={addTodo} />\r\n              </Style.Icon>\r\n            </Style.Buttons>\r\n          </Form.Item>\r\n        </Form>\r\n      </Style.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import React from 'react';\r\nimport Style from './StyledAddTodo';\r\nimport AddTodo from './AddTodo';\r\n\r\nconst AddTodoPage = () => {\r\n  return (\r\n    <Style.ContainerRoot>\r\n      <div>\r\n        <AddTodo />\r\n      </div>\r\n    </Style.ContainerRoot>\r\n  );\r\n};\r\n\r\nexport default AddTodoPage;\r\n","import React, { useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TodoContext } from '@providers/DateProvider';\r\nimport { Form, Input } from 'antd';\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport Style from './StyledEditTodo';\r\nimport { editTodoInList } from '@firebaseConfig';\r\n\r\nconst EditTodoPage = () => {\r\n  const [todo, setTodo] = useContext(TodoContext);\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState(todo ? todo.title : '');\r\n  const [description, setDescription] = useState(todo ? todo.description : '');\r\n\r\n  const editTodo = event => {\r\n    editTodoInList(event, todo, setTodo, title, description);\r\n    setTimeout(() => {\r\n      history.push('/todo');\r\n    }, 2000);\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  const editTitle = event => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const editDescription = event => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <Style.Container>\r\n        <Form>\r\n          <Style.Header>\r\n            <h1>Edit Todo</h1>\r\n          </Style.Header>\r\n          <Form.Item>\r\n            <Input\r\n              name=\"title\"\r\n              defaultValue={title}\r\n              onChange={editTitle}></Input>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Input.TextArea\r\n              rows={14}\r\n              name=\"description\"\r\n              defaultValue={description}\r\n              onChange={editDescription}\r\n            />\r\n          </Form.Item>\r\n        </Form>\r\n        <Style.Buttons>\r\n          <Style.Icon>\r\n            <CloseCircleOutlined onClick={cancelEdit} />\r\n          </Style.Icon>\r\n          <Style.Icon>\r\n            <CheckCircleOutlined onClick={editTodo} />\r\n          </Style.Icon>\r\n        </Style.Buttons>\r\n      </Style.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTodoPage;\r\n","import React from 'react';\r\n\r\nimport ProfilePage from './ProfilePage/ProfilePage';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport EditTodo from './EditTodo/EditTodo';\r\nimport AddTodoPage from './AddTodo/AddTodoPage';\r\nimport EditTodoPage from './EditTodo/EditTodoPage';\r\n\r\nconst Todo = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/calendar\" component={ProfilePage} />\r\n        <Route path=\"/edittodo\" component={EditTodoPage} />\r\n        <Route path=\"/addtodo\" component={AddTodoPage} />\r\n        <Route path=\"/todo\" component={EditTodo} />\r\n        <Route path=\"/\" component={ProfilePage} />\r\n        <Route path=\"/\">\r\n          <Redirect to=\"/calendar\" />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useContext } from 'react';\r\nimport { UserContext } from '@providers/UserProvider';\r\nimport DateProvider from '@providers/DateProvider';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Authentication from '@modules/Authentication/Authentication';\r\nimport Todo from '@modules/Todos/Todo';\r\n\r\nconst Routes = () => {\r\n  const user = useContext(UserContext);\r\n\r\n  return user ? (\r\n    <DateProvider>\r\n      <Router>\r\n        <Todo />\r\n      </Router>\r\n    </DateProvider>\r\n  ) : (\r\n    <Router>\r\n      <Authentication />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport UserProvider from '@providers/UserProvider';\r\nimport Routes from '@routes/Routes';\r\nfunction App() {\r\n  return (\r\n    <UserProvider>\r\n      <Routes />\r\n    </UserProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}